# For complete reference of available Liferay Workspace properties and their defaults, please check:
#       https://github.com/liferay/liferay-portal/blob/master/modules/sdk/project-templates/project-templates-workspace/src/main/resources/archetype-resources/gradle.properties

##
## WeDeploy
##

# Override default Liferay Workspace settings to suit DXP Cloud builds. We won't
# need a real bundle for DXPCloud builds - it will be shipped inside the Docker
# image for 'liferay' service, see 'liferay.workspace.wedeploy.liferay.image' below.
#
liferay.workspace.environment=dxpcloud
liferay.workspace.bundle.url=file:./wedeploy-bundle-minimal.zip

# The name of the directory inside '[root]/wedeploy' where Liferay DXP service
# for DXP Cloud is located. Custom modules built from this Liferay Workspace will
# be copied there to be deployed once DXP starts up in DXP Cloud.
#
liferay.workspace.wedeploy.liferay.service.dir.name=liferay

# If the file type in wedeploy/ directory is whitelisted in liferay.workspace.wedeploy.copy.filter.includes
# (e.g. is a plain text file), then any 'liferay.workspace.wedeploy.*' variable
# will be expanded as a token in files as copied from wedeploy/* into build/wedeploy/*.
# See 'gradle/wedeploy/wedeploy.gradle' for details.
#
liferay.workspace.wedeploy.database.image=wedeploy/dxpcloud-rds:1.1.0
liferay.workspace.wedeploy.search.image=wedeploy/dxpcloud-elasticsearch:6.1.4-2.0.2
liferay.workspace.wedeploy.liferay.image=wedeploy/dxpcloud-liferay-dxp:7.1.0-ga1-fp6-2.0.4
liferay.workspace.wedeploy.backup.image=wedeploy/dxpcloud-backup:1.4.0
liferay.workspace.wedeploy.webserver.image=wedeploy/dxpcloud-nginx:1.14.1-2.1.0
liferay.workspace.wedeploy.jenkins.image=wedeploy/dxpcloud-jenkins:2.150.3-1.9

# Comma-separated list of files (Ant-style patterns) where token expansion will
# happen when copying them from 'wedeploy/' during build. Binary files would be
# corrupted if passed through the filter, so make sure to include only the files
# where token expressions are used.
#
# This is a workaround for annoying bug / feature in Gradle: https://issues.gradle.org/browse/GRADLE-1566
#
liferay.workspace.wedeploy.copy.filter.includes=\
  **/Dockerfile,\
  **/*.properties,\
  **/*.json,\
  **/*.yml,\
  **/*.yaml,\
  **/*.config,\
  **/*.cfg,\
  **/*.txt

# If you are experiencing errors with running local DXP Cloud stack with Docker,
# or deploying into the stack, try to let Gradle run the Docker-related commands
# with `sudo`. Settings this property to `true` assumes that your OS user executing
# the Gradle command has a no-password permission to use `sudo`.
#
# Preferably, check Docker docs on how to run in your OS without `sudo`, e.g. see
# the instructions for Linux:
#   * https://docs.docker.com/install/linux/linux-postinstall/
#
liferay.workspace.wedeploy.local.stack.use.sudo=false
